<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">

    <!--auto-config is a legacy attribute-->
    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/secured/**" access="hasRole('ROLE_ADMIN')" />
        <form-login/>
    </http>

    <beans:bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <beans:property name="url" value="jdbc:mysql://localhost:3306/myapp"/>
        <beans:property name="username" value="root"/>
        <beans:property name="password" value="password"/>
        <beans:property name="validationQuery" value="SELECT 1"/>
    </beans:bean>

    <!-- See SQL to add one exemplary user account in file user_authorization_tables.sql -->
    <authentication-manager>
        <authentication-provider>
            <password-encoder ref="encoder"/>
            <jdbc-user-service data-source-ref="myDataSource"
                               users-by-username-query="select username,password, enabled from user where username=?"
                               authorities-by-username-query="select username, role from user_roles where username =?" />
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="encoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <beans:constructor-arg name="strength" value="10" />
    </beans:bean>

</beans:beans>